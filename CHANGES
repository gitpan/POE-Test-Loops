=====================================
2010-04-03T18:15:36.151833Z ptl-1_034
=====================================

  2010-04-03 17:46:46 (r2854) by rcaputo
  poe-test-loops/lib/POE/Test/Loops.pm M

    Bump PTL revision for release.

  2010-03-24 06:52:46 (r2852) by apocal
  poe M; polo-gtk/Makefile.PL M; polo-tk M; polo-event M; poe-test-loops
  M; polo-gtk M

    Set svn:ignore for: META.yml CHANGES run_network_tests PoLo-Gtk
    forgot to clean run_network_tests 

  2010-03-23 17:27:32 (r2849) by rcaputo
  poe-test-loops/MANIFEST M;
  poe-test-loops/lib/POE/Test/Loops/z_rt53302_fh_watchers.pm R;
  poe-test-loops/lib/POE/Test/Loops/z_rt53302_fh_watchers_slow.pm D

    Replace z_rt53302_fh_watchers.pm with z_rt53302_fh_watchers_slow.pm.
    The non-slow one was broken since its client shuts down without
    waiting for the server's response. 

  2010-03-22 06:00:17 (r2846) by rcaputo
  poe-test-loops/lib/POE/Test/Loops.pm M;
  poe-test-loops/bin/poe-gen-tests M

    Support legal =for and =begin POD syntax for skip_tests(), in
    addition to the previous =for/=cut syntax that caused skip_tests() to
    appear in everyone's perldoc. Document the change. Deprecate the bad
    syntax, which won't be a terrible burden since everyone probably
    wanted to migrate away from it anyway. 

  2010-03-22 02:54:39 (r2845) by apocal
  poe-test-loops/lib/POE/Test/Loops.pm M;
  poe-test-loops/bin/poe-gen-tests M

    Add optional one-line =for poe_tests syntax to hide it from POD
    formatters.
    
    Add example from POE::Loop::Glib that uses the new syntax. 

  2010-03-11 06:57:11 (r2839) by apocal
  poe-test-loops/MANIFEST M; poe-test-loops/lib/POE/Test/Loops/00_info.pm
  A

    Added the 00_info test for better debugging 

  2010-03-11 05:28:23 (r2838) by apocal
  poe-test-loops/MANIFEST M;
  poe-test-loops/lib/POE/Test/Loops/z_rt53302_fh_watchers.pm A;
  poe-test-loops/lib/POE/Test/Loops/z_rt53302_fh_watchers_slow.pm A

    Add new tcp connection test for RT#53302 

  2010-03-10 19:14:25 (r2836) by rcaputo
  poe-test-loops/bin/poe-gen-tests M

    Update the skip_tests() examples, and explain what's going on in
    each. 

  2010-03-09 07:59:40 (r2831) by apocal
  poe-test-loops/lib/POE/Test/Loops/z_rt54319_bazerka_followtail.pm M

    Fix the followtail test to use File::Temp, thanks to
    http://cpantesters.org/cpan/report/6877011 and others like it 

  2010-03-09 07:20:16 (r2830) by apocal
  poe/lib/POE/Wheel/ReadLine.pm M;
  poe-test-loops/lib/POE/Test/Loops/wheel_readline.pm M

    After a lot of hacking/digging Cygwin with a TERM=dumb does not work
    with POE::Wheel::ReadLine. This fix skips the test, and makes
    Wheel::ReadLine die if it detects this situation. Added some docs for
    our Cygwin users :) 

=====================================
2010-02-15T06:28:11.163679Z ptl-1_033
=====================================

  2010-02-15 06:27:00 (r2812) by rcaputo
  poe-test-loops/lib/POE/Test/Loops.pm M

    Bump for yet another release.

  2010-02-15 01:05:37 (r2811) by rcaputo
  poe-test-loops/lib/POE/Test/Loops/z_rt54319_bazerka_followtail.pm M

    Make Bazerka's regression test a little more forgiving about elapsed
    run time. 

  2010-02-14 23:55:56 (r2810) by rcaputo
  poe-test-loops/lib/POE/Test/Loops/z_leolo_wheel_run.pm M

    Skip pty tests if IO::Pty isn't available. Also some style fixes. 

  2010-02-14 23:55:18 (r2809) by rcaputo
  poe-test-loops/lib/POE/Test/Loops/z_rt54319_bazerka_followtail.pm M

    Make the test a little more forgiving for slower systems, such as
    virtualized Windows systems and other forms of emulation. 

=====================================
2010-02-14T21:38:46.364786Z ptl-1_032
=====================================

  2010-02-14 02:44:47 (r2797) by rcaputo
  poe-test-loops/MANIFEST M;
  poe-test-loops/lib/POE/Test/Loops/z_rt54319_bazerka_followtail.pm A;
  poe-test-loops/lib/POE/Test/Loops.pm M

    Add a test case from rt.cpan.org #54319. Verify Po::Wh::FollowTail
    actually tails files. Thanks to Bazerka on irc.perl.org for
    submitting the basis of this test case. 

  2010-01-02 02:57:35 (r2773) by rcaputo
  poe-test-loops/lib/POE/Test/Loops/z_leolo_wheel_run.pm M;
  poe-test-loops/lib/POE/Test/Loops/ses_nfa.pm M;
  poe-test-loops/lib/POE/Test/Loops/z_steinert_signal_integrity.pm M

    Try to resolve some CPAN indexer issues.
    
    Eliminate a $VERSION string being used to test a version (not define
    one). Eliminate a package statement used to define a constant (not a
    class). Change a test package name to avoid indexer conflict with
    another distribution. 

=====================================
2010-01-01T08:57:09.665997Z ptl-1_031
=====================================

  2010-01-01 08:53:54 (r2769) by rcaputo
  poe-test-loops/lib/POE/Test/Loops.pm M

    Prepare for release.

  2009-12-27 09:56:05 (r2763) by rcaputo
  poe-test-loops/lib/POE/Test/Loops/wheel_tail.pm M

    Check for initial reset on delayed open. 

  2009-12-26 22:32:43 (r2758) by rcaputo
  poe-test-loops/lib/POE/Test/Loops/wheel_tail.pm M

    Clarify FollowTail debugging messages. 

  2009-12-26 09:19:55 (r2756) by rcaputo
  poe-test-loops/lib/POE/Test/Loops/connect_errors.pm M

    Unfortunately we can't test connect errors on Windows. Behavior seems
    to vacillate from one version of ActivePerl to another. 

  2009-12-26 08:50:19 (r2755) by rcaputo
  poe-test-loops/lib/POE/Test/Loops/wheel_tail.pm M

    Resolve a line ending issue that caused false failures in Windows. 

=====================================
2009-10-14T04:25:48.467603Z ptl-1_030
=====================================

  2009-10-14 04:24:18 (r2744) by rcaputo
  poe-test-loops/lib/POE/Test/Loops.pm M

    New version for a new release.

  2009-10-13 12:43:42 (r2743) by bingosnet
  poe-test-loops/lib/POE/Test/Loops/comp_tcp_concurrent.pm M

    Explicitly bind to loopback address for the concurrent TCP tests

  2009-10-11 18:53:43 (r2741) by rcaputo
  poe-test-loops/lib/POE/Test/DondeEstan.pm M

    Fix Marco's name. Oops! 

  2009-10-07 01:50:42 (r2736) by rcaputo
  poe-test-loops/lib/POE/Test/Loops.pm M

    Set version for dev release.

  2009-10-06 03:50:33 (r2735) by rcaputo
  poe-test-loops/lib/POE/Test/Loops/k_signals_rerun.pm M;
  poe/t/10_units/01_pod/01_pod.t M;
  poe/t/90_regression/ferrari-server-unix.t M;
  poe/t/90_regression/broeren-win32-nbio.t M;
  poe/t/10_units/07_exceptions/03_not_handled.t M;
  poe/t/10_units/05_filters/06_recordblock.t M;
  poe/t/10_units/07_exceptions/02_turn_off.t M;
  poe/t/90_regression/rt19908-merlyn-stop.t M;
  poe/t/10_units/02_pipes/03_twoway.t M;
  poe-test-loops/lib/POE/Test/Loops/sbk_signal_init.pm M;
  poe/t/10_units/05_filters/08_stream.t M;
  poe-test-loops/lib/POE/Test/Loops/wheel_sf_ipv6.pm M;
  poe/t/10_units/05_filters/07_reference.t M;
  poe/t/10_units/03_base/10_wheel.t M;
  poe/t/90_regression/bingos-followtail.t M;
  poe-test-loops/lib/POE/Test/Loops/z_kogman_sig_order.pm M;
  poe-test-loops/lib/POE/Test/Loops/comp_tcp.pm M;
  poe/t/10_units/05_filters/99_filterchange.t M;
  poe/t/10_units/06_queues/01_array.t M;
  poe-test-loops/lib/POE/Test/Loops/k_selects.pm M;
  poe-test-loops/lib/POE/Test/Loops/wheel_tail.pm M;
  poe/t/10_units/03_base/16_explicit_loop.t M;
  poe/t/10_units/05_filters/03_http.t M;
  poe-test-loops/lib/POE/Test/Loops/z_merijn_sigchld_system.pm M;
  poe-test-loops/lib/POE/Test/Loops/ses_nfa.pm M;
  poe/t/10_units/03_base/14_kernel.t M;
  poe/t/90_regression/neyuki_detach.t M;
  poe/t/90_regression/averell-callback-ret.t M;
  poe/t/90_regression/whelan-dieprop.t M;
  poe-test-loops/lib/POE/Test/Loops/wheel_run.pm M;
  poe/t/10_units/03_base/13_assert_data.t M;
  poe/t/10_units/05_filters/50_stackable.t M;
  poe/t/10_units/03_base/08_resource.t M;
  poe/t/90_regression/suzman_windows.t M;
  poe-test-loops/lib/POE/Test/Loops/k_sig_child.pm M;
  poe/t/10_units/01_pod/02_pod_coverage.t M;
  poe-test-loops/lib/POE/Test/Loops/k_detach.pm M;
  poe-test-loops/lib/POE/Test/Loops/all_errors.pm M;
  poe/t/90_regression/kjeldahl-stop-start-polling.t M;
  poe-test-loops/lib/POE/Test/Loops/wheel_readline.pm M;
  poe/t/90_regression/rt23181-sigchld-rc.t M;
  poe-test-loops/lib/POE/Test/Loops/k_signals.pm M;
  poe/t/10_units/03_base/06_loop.t M;
  poe/t/20_resources/00_base/signals.pm M;
  poe/t/10_units/03_base/12_assert_retval.t M;
  poe/t/20_resources/00_base/sids.pm M;
  poe/t/20_resources/00_base/sessions.pm M;
  poe-test-loops/lib/POE/Test/Loops/wheel_accept.pm M;
  poe/t/90_regression/cfedde-filter-httpd.t M;
  poe/t/90_regression/rt47966-sigchld.t M;
  poe/t/10_units/05_filters/01_block.t M;
  poe-test-loops/lib/POE/Test/Loops/wheel_curses.pm M;
  poe-test-loops/lib/POE/Test/Loops/z_rt39872_sigchld.pm M;
  poe/t/10_units/04_drivers/01_sysrw.t M;
  poe-test-loops/lib/POE/Test/Loops/wheel_sf_unix.pm M;
  poe/t/10_units/07_exceptions/01_normal.t M;
  poe-test-loops/lib/POE/Test/Loops/wheel_sf_tcp.pm M;
  poe/t/90_regression/rt1648-tied-stderr.t M;
  poe/t/90_regression/agaran-filter-httpd.t M;
  poe-test-loops/lib/POE/Test/Loops/comp_tcp_concurrent.pm M;
  poe/t/90_regression/whjackson-followtail.t M;
  poe-test-loops/lib/POE/Test/Loops/wheel_readwrite.pm M;
  poe/t/90_regression/kjeldahl-stop-start-sig-nopipe.t M;
  poe/t/10_units/02_pipes/01_base.t M;
  poe/t/10_units/03_base/11_assert_usage.t M;
  poe/t/90_regression/steinert-passed-wheel.t M;
  poe/t/90_regression/rt14444-arg1.t M;
  poe-test-loops/lib/POE/Test/Loops/connect_errors.pm M;
  poe/t/10_units/03_base/05_filter.t M;
  poe/t/10_units/05_filters/04_line.t M;
  poe/t/10_units/03_base/07_queue.t M;
  poe-test-loops/lib/POE/Test/Loops/k_alarms.pm M;
  poe/t/20_resources/00_base/filehandles.pm M;
  poe/t/10_units/03_base/04_driver.t M;
  poe/t/10_units/05_filters/02_grep.t M;
  poe/t/90_regression/ton-stop-corruption.t M;
  poe-test-loops/lib/POE/Test/Loops/ses_session.pm M;
  poe/t/10_units/03_base/18_nfa_usage.t M;
  poe-test-loops/lib/POE/Test/Loops/z_rt39872_sigchld_stop.pm M;
  poe-test-loops/lib/POE/Test/Loops/k_run_returns.pm M;
  poe/t/10_units/03_base/03_component.t M;
  poe-test-loops/lib/POE/Test/Loops/wheel_sf_udp.pm M;
  poe/t/10_units/02_pipes/02_oneway.t M;
  poe/t/20_resources/00_base/extrefs_gc.pm M; poe/t/00_info.t M;
  poe/t/10_units/03_base/17_explicit_loop_fail.t M;
  poe-test-loops/lib/POE/Test/Loops/z_leolo_wheel_run.pm M;
  poe/t/90_regression/kjeldahl-stop-start-sig-pipe.t M;
  poe/t/20_resources/00_base/caller_state.pm M;
  poe/t/10_units/05_filters/05_map.t M;
  poe/t/10_units/03_base/09_resources.t M;
  poe-test-loops/lib/POE/Test/Loops/z_steinert_signal_integrity.pm M;
  poe/t/90_regression/somni-poco-server-tcp.t M

    Make the tests generally ASSERT_DEFAULT clean. POE_TRACE_FILENAME hid
    a multitude of sins in the test output file. Update the vim options
    lines while I'm in there. 

  2009-10-06 03:39:18 (r2733) by rcaputo
  poe-test-loops/lib/POE/Test/Loops/k_aliases.pm M;
  poe/t/10_units/03_base/15_kernel_internal.t M;
  poe/t/10_units/03_base/01_poe.t M

    Redirect STDERR while testing some errors. ASSERT_DEFAULT is on and
    making noise when things are called wrong, even when we do it on
    purpose. 

  2009-10-05 05:32:30 (r2727) by rcaputo
  poe-test-loops/lib/POE/Test/Loops/k_signals_rerun.pm M;
  poe-test-loops/lib/POE/Test/Loops/wheel_run.pm M;
  poe-test-loops/lib/POE/Test/Loops/wheel_curses.pm M;
  poe-test-loops/lib/POE/Test/Loops/z_rt39872_sigchld.pm M;
  poe-test-loops/lib/POE/Test/Loops/ses_session.pm M;
  poe-test-loops/lib/POE/Test/Loops/z_rt39872_sigchld_stop.pm M;
  poe-test-loops/lib/POE/Test/Loops/wheel_sf_unix.pm M;
  poe-test-loops/lib/POE/Test/Loops/k_sig_child.pm M;
  poe-test-loops/lib/POE/Test/Loops/all_errors.pm M;
  poe/t/90_regression/kjeldahl-stop-start-polling.t M;
  poe-test-loops/lib/POE/Test/Loops/comp_tcp_concurrent.pm M;
  poe-test-loops/lib/POE/Test/Loops/wheel_readline.pm M;
  poe-test-loops/lib/POE/Test/Loops/wheel_readwrite.pm M;
  poe-test-loops/lib/POE/Test/Loops/k_signals.pm M;
  poe-test-loops/lib/POE/Test/Loops/z_leolo_wheel_run.pm M;
  poe/t/90_regression/kjeldahl-stop-start-sig-nopipe.t M;
  poe-test-loops/lib/POE/Test/Loops/wheel_tail.pm M;
  poe/t/90_regression/kjeldahl-stop-start-sig-pipe.t M

    Add an option to enable all the broken MSWin32 tests.
    
    Set POE_DANTIC=1 before running "make test" to watch the pretty
    fireworks. Oooh! Ahhhhhh! 

  2009-10-02 03:47:17 (r2707) by rcaputo
  poe-test-loops/lib/POE/Test/Loops/wheel_sf_ipv6.pm M

    [rt.cpan.org 48715] Apply Craig's patch to skip the IPv6 tests if
    IPv6 isn't actually enabled. The port autodetect code to didn't
    handle failure due to IPv6 unavailability. 

  2009-09-29 15:13:53 (r2703) by rcaputo
  poe-test-loops/lib/POE/Test/Loops/z_rt39872_sigchld.pm M;
  poe-test-loops/lib/POE/Test/Loops/ses_session.pm M;
  poe-test-loops/lib/POE/Test/Loops/z_rt39872_sigchld_stop.pm M

    !!! Adjust tests for mark-and-sweep session GC changes.
    
    Some of the tests are sensitive to session GC timing. 

  2009-09-16 15:11:30 (r2691) by rcaputo
  poe-test-loops/MANIFEST M;
  poe-test-loops/lib/POE/Test/Loops/k_run_returns.pm A

    Test that POE::Kernel->run() without sessions returns right away. 

=====================================
2009-09-07T19:22:59.577723Z ptl-1_022
=====================================

  2009-09-07 19:13:43 (r2677) by rcaputo
  poe-test-loops/lib/POE/Test/Loops/all_errors.pm M;
  poe-test-loops/lib/POE/Test/Loops.pm M

    Bump up the version, and prevent perl-reversion from seeing test
    version strings (that are commented out, no less). 

  2009-09-06 03:32:57 (r2675) by rcaputo
  poe-test-loops/lib/POE/Test/Loops/comp_tcp.pm M

    [rt 36648] Add tests for the new Client and Server TCP component
    capabilities. 

  2009-09-05 17:56:52 (r2672) by rcaputo
  poe-test-loops/lib/POE/Test/Loops/comp_tcp.pm M;
  poe-test-loops/lib/POE/Test/Loops/wheel_tail.pm M;
  poe-test-loops/lib/POE/Test/Loops/wheel_sf_ipv6.pm M;
  poe-test-loops/lib/POE/Test/Loops/wheel_sf_tcp.pm M

    [rt 49384] Explicitly bind to 127.0.0.1 in tests, reported
    anonymously. [cpan testers 5241203] Bind to INPORT_ANY to avoid
    "address already in use" failures, reported by Oliver Paukstadt. 

  2009-09-04 07:49:18 (r2671) by rcaputo
  poe-test-loops/lib/POE/Test/Loops/wheel_run.pm M

    Make write-combining test optional. The timing of some event loops
    triggers write-combining, and others don't. Resolves rt.cpan.org
    28804 (finally!), reported by Martijn van Beers. 

  2009-09-04 04:28:55 (r2668) by rcaputo
  poe-test-loops/lib/POE/Test/Loops/z_rt39872_sigchld.pm M;
  poe-test-loops/lib/POE/Test/Loops/z_rt39872_sigchld_stop.pm M

    Tk and fork() don't get along well. Skip some fork() based tests when
    Tk is loaded, to avoid XIO errors that have shown up in FreeBSD. 

  2009-09-03 16:08:06 (r2665) by rcaputo
  poe-test-loops/lib/POE/Test/Loops/k_signals_rerun.pm M;
  poe-test-loops/lib/POE/Test/Loops/z_rt39872_sigchld.pm M;
  poe-test-loops/lib/POE/Test/Loops/z_leolo_wheel_run.pm M;
  poe-test-loops/lib/POE/Test/Loops/z_rt39872_sigchld_stop.pm M

    Skip pty tests in z_leolo_wheel_run.pm on MSWin32. Change some skip
    messages. 

  2009-08-08 08:25:22 (r2625) by rcaputo
  poe-test-loops/lib/POE/Test/Loops/z_leolo_wheel_run.pm M

    Skip a known issue regarding pseudy-ttys, Event, and Mac OS X. On OS
    X, poll() returns POLLNVAL for pseudo-ttys. Event cancels its
    watchers in this case without a callback. 

  2009-08-08 04:56:28 (r2623) by rcaputo
  poe/t/90_regression/leolo-poe-wheel-run.t D; poe-test-loops/MANIFEST M;
  poe-test-loops/lib/POE/Test/Loops/z_leolo_wheel_run.pm A

    Move Philip Gwyn's signals test to POE::Test::Loops, so it can
    exercise everyone's event loops. 

  2009-07-27 17:07:20 (r2608) by rcaputo
  poe-test-loops/bin/poe-gen-tests M

    Reorganize documentation links.

  2009-07-27 05:10:57 (r2605) by rcaputo
  poe-test-loops/Makefile.PL M; poe-test-loops/bin/poe-gen-tests M

    Added a machine-readable repository directory to the distribution.
    Documented the bug tracker, repository, and other resource URLs. 

=====================================
2009-07-25T17:41:01.181408Z ptl-1_021
=====================================

  2009-07-25 17:35:34 (r2599) by rcaputo
  poe-test-loops/lib/POE/Test/Loops/sbk_signal_init.pm M;
  poe-test-loops/lib/POE/Test/Loops.pm M

    Can't sleep! HP-UX will get me! Resolves Dolmen's bug report at
    rt.cpan.org 45158 by using select(undef,undef,undef,$time) instead of
    sleep(). I hope that actually works. 

=====================================
2009-07-24T04:37:05.604140Z ptl-1_020
=====================================

  2009-07-24 04:33:31 (r2597) by rcaputo
  poe-test-loops/lib/POE/Test/Loops.pm M

    New version for a new release.

  2009-07-22 20:24:33 (r2596) by rcaputo
  poe-test-loops/lib/POE/Test/Loops/z_kogman_sig_order.pm M

    Plan for a specific test count. Sometimes the no_plan end-run plan
    doesn't get output, breaking the test despite all subtests passing. 

  2009-07-21 02:22:58 (r2586) by rcaputo
  poe-test-loops/lib/POE/Test/Loops/z_rt39872_sigchld_stop.pm M

    Conditionally call has_forked() if it's available. Should prevent
    issues where the tests are released before the feature. Also, moved
    has_forked() earlier because it was called too early for new
    PID-change checks contributed by Philip Gwyn. 

  2009-07-20 08:40:10 (r2583) by rcaputo
  poe-test-loops/lib/POE/Test/Loops/z_rt39872_sigchld_stop.pm M

    Add a bit of debugging. Add a delay before POE is loaded, in case the
    race is between the test framework's Tk detection and POE
    initializing Tk at start time. To avoid unnecessary delays, make them
    dependent on Tk being loaded. 

  2009-07-20 07:34:01 (r2582) by rcaputo
  poe-test-loops/lib/POE/Test/Loops/z_rt39872_sigchld_stop.pm M

    This test causes Tk or X to throw an error if it's run too soon after
    the previous test. Add a 2sec delay before the test to give the GUI
    time to settle down. 

  2009-07-20 06:19:54 (r2580) by rcaputo
  poe-test-loops/MANIFEST M;
  poe-test-loops/lib/POE/Test/Loops/z_rt39872_sigchld.pm A;
  poe-test-loops/lib/POE/Test/Loops/z_rt39872_sigchld_stop.pm A;
  poe-test-loops/lib/POE/Test/Loops/z_merijn_sigchld_system.pm A;
  poe-test-loops/lib/POE/Test/Loops.pm M;
  poe-test-loops/lib/POE/Test/Loops/z_steinert_signal_integrity.pm A;
  poe-test-loops/lib/POE/Test/Loops/z_kogman_sig_order.pm A

    Promote some of the signal-related regression tests into the event
    loop tests. Event loops handle signals in a variety of ways, so they
    should all try these tests. Except the one commented out of the
    MANIFEST, as it has a tendency to segfault for people. 

==============
End of Excerpt
==============
