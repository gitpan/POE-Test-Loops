=====================================
2009-07-24T04:37:05.604140Z ptl-1_020
=====================================

  2009-07-24 04:33:31 (r2597) by rcaputo
  poe-test-loops/lib/POE/Test/Loops.pm M

    New version for a new release.

  2009-07-22 20:24:33 (r2596) by rcaputo
  poe-test-loops/lib/POE/Test/Loops/z_kogman_sig_order.pm M

    Plan for a specific test count. Sometimes the no_plan end-run plan
    doesn't get output, breaking the test despite all subtests passing. 

  2009-07-21 02:22:58 (r2586) by rcaputo
  poe-test-loops/lib/POE/Test/Loops/z_rt39872_sigchld_stop.pm M

    Conditionally call has_forked() if it's available. Should prevent
    issues where the tests are released before the feature. Also, moved
    has_forked() earlier because it was called too early for new
    PID-change checks contributed by Philip Gwyn. 

  2009-07-20 08:40:10 (r2583) by rcaputo
  poe-test-loops/lib/POE/Test/Loops/z_rt39872_sigchld_stop.pm M

    Add a bit of debugging. Add a delay before POE is loaded, in case the
    race is between the test framework's Tk detection and POE
    initializing Tk at start time. To avoid unnecessary delays, make them
    dependent on Tk being loaded. 

  2009-07-20 07:34:01 (r2582) by rcaputo
  poe-test-loops/lib/POE/Test/Loops/z_rt39872_sigchld_stop.pm M

    This test causes Tk or X to throw an error if it's run too soon after
    the previous test. Add a 2sec delay before the test to give the GUI
    time to settle down. 

  2009-07-20 06:19:54 (r2580) by rcaputo
  poe-test-loops/MANIFEST M;
  poe-test-loops/lib/POE/Test/Loops/z_rt39872_sigchld.pm A;
  poe-test-loops/lib/POE/Test/Loops/z_rt39872_sigchld_stop.pm A;
  poe-test-loops/lib/POE/Test/Loops/z_merijn_sigchld_system.pm A;
  poe-test-loops/lib/POE/Test/Loops.pm M;
  poe-test-loops/lib/POE/Test/Loops/z_steinert_signal_integrity.pm A;
  poe-test-loops/lib/POE/Test/Loops/z_kogman_sig_order.pm A

    Promote some of the signal-related regression tests into the event
    loop tests. Event loops handle signals in a variety of ways, so they
    should all try these tests. Except the one commented out of the
    MANIFEST, as it has a tendency to segfault for people. 

=====================================
2009-03-08T00:34:03.909445Z ptl-1_005
=====================================

  2009-03-08 00:33:21 (r2497) by rcaputo
  poe-test-loops/Makefile.PL M;
  poe-test-loops/lib/POE/Test/Loops/ses_nfa.pm M;
  poe-test-loops/lib/POE/Test/Loops.pm M

    Remove version.pm dependency.

=====================================
2009-03-07T18:54:28.797464Z ptl-1_004
=====================================

  2009-03-07 18:52:37 (r2493) by rcaputo
  poe-test-loops/lib/POE/Test/Loops.pm M

    Time for an official release.

  2009-03-02 00:06:17 (r2487) by rcaputo
  poe-test-loops/lib/POE/Test/Loops.pm M

    New test release.

  2009-03-01 22:26:44 (r2486) by apocal
  poe-test-loops/Makefile.PL M;
  poe-test-loops/lib/POE/Test/Loops/ses_nfa.pm M

    Remove the specific dependency on version 0.74, and pray that the
    user has a recent enough version

  2009-03-01 13:31:26 (r2477) by apocal
  poe-test-loops/lib/POE/Test/Loops/wheel_tail.pm M

    I was overzealous, this test works in Strawberry Perl, not
    ActiveState...

  2009-03-01 12:53:59 (r2476) by apocal
  poe-test-loops/lib/POE/Test/Loops/connect_errors.pm M;
  poe-test-loops/lib/POE/Test/Loops/wheel_tail.pm M

    more tweaks to get the tests to SKIP on buggy MSWin32 perls :(

  2009-03-01 08:21:04 (r2475) by apocal
  poe-test-loops/lib/POE/Test/Loops/wheel_accept.pm M

    tweak the test so it passes on MSWin32+ActiveState 5.6.1

  2009-02-25 08:09:16 (r2468) by rcaputo
  poe-test-loops/lib/POE/Test/Loops.pm M

    Time for a new release.

  2009-02-23 12:29:33 (r2463) by lotr
  poe-test-loops/Makefile.PL M;
  poe-test-loops/lib/POE/Test/Loops/ses_nfa.pm M

    use version.pm so our version comparison is more robust and supports
    developer releases too 

  2009-02-22 19:37:04 (r2459) by rcaputo
  poe-test-loops/lib/POE/Test/Loops.pm M

    Time for a new DEVELOPER release.

  2009-02-22 19:25:46 (r2458) by rcaputo
  poe-test-loops/lib/POE/Test/Loops.pm M

    Time for a new release.

  2009-02-17 12:27:29 (r2453) by lotr
  poe-test-loops/lib/POE/Test/Loops/ses_nfa.pm M

    remove spurious warns

  2009-02-17 11:20:27 (r2452) by lotr
  poe-test-loops/lib/POE/Test/Loops/wheel_readline.pm M

    match up missing brace 

  2009-02-17 11:18:59 (r2451) by lotr
  poe-test-loops/lib/POE/Test/Loops/ses_nfa.pm M

    only run the object/package state tests if we have a new enough POE 

  2009-02-17 08:03:49 (r2450) by rcaputo
  poe/lib/POE/Wheel/ReadLine.pm M;
  poe-test-loops/lib/POE/Test/Loops/wheel_readline.pm M

    Resolve rt.cpan.org #38974, reported by Jari Bonte. If TERM is
    misset, we will skip the POE::Wheel::ReadLine test rather than fail. 

  2009-02-16 11:23:16 (r2444) by apocal
  poe-test-loops/lib/POE/Test/Loops/sbk_signal_init.pm M

    skip test because of broken alarm() on MSWin32 with perl5.6

  2009-02-16 10:34:12 (r2440) by lotr
  poe-test-loops/lib/POE/Test/Loops/ses_nfa.pm M

    use object and package_states in NFA tests to make sure it works 

  2009-02-10 09:05:42 (r2426) by rcaputo
  poe-test-loops/lib/POE/Test/Loops/wheel_readwrite.pm M;
  poe-test-loops/lib/POE/Test/Loops/ses_session.pm M;
  poe-test-loops/lib/POE/Test/Loops/ses_nfa.pm M

    Remove some warnings. 

=====================================
2009-01-30T07:11:18.435237Z ptl-1_003
=====================================

  2009-01-30 07:04:44 (r2411) by rcaputo
  poe-test-loops/lib/POE/Test/Loops/wheel_run.pm M;
  poe-test-loops/lib/POE/Test/Loops.pm M;
  poe-test-loops/bin/poe-gen-tests M

    Apply Tony Cook's suggestion to use environment variables to skip
    problematic tests. Event loops which have these problems can bypass
    tests which are known to fail. Also fixed a documentation omission
    based on his comments in IRC. 

==============
End of Excerpt
==============
